※ 상태 정보 유지 기술※
- 요청마다 서로 다른 연결로 인식되어 요청 간에 정보를 공유해서 사용할 수 없는 상태가 되는데 
  이런 특성을 무상태라고 합니다.
  그래서 HTTP를 사용하는 웹 프로그래밍에서는 이전 요청 시 사용한 정보를 다른 요청에서도 계속 사용하고 싶다면 
  서버나 클라이언트 측에 정보를 저장해 두고 계속 상태정보를 유지한 후 사용하는 정보 유지기술이 필요합니다.

 1. 저장 위치에 따른 분류 
    1) 클라이언트 측에 저장 기술  - 쿠키

    2) 서버 측에 저장 기술 - 서버의 힙 메모리 영역에 만들어진 객체에 상태정보를 저장하는 것을 의미합니다.
                         서블릿에서 서버 측에 상태 정보를 저장할 수 있는 객체는 다음과 같습니다.
       - javax.servlet.ServletContext
       - javax.servlet.http.HttpSession
       - javax.servlet.http.HttpServletRequest

 2. 유지 기간 분류
    1) 웹 애플리케이션 단위 유지
       (1)웹 애플리케이션이 서비스되고 있는 동안 유지하는 것을 의미합니다. 
       (2)생명주기가 웹 애플리케이션과 같은 객체는 ServletContext 입니다.
       (3)ServletContext는 웹 애플리케이션 서비스가 시작될 때 생성되고 종료될 때 소멸합니다.

        - javax.servlet.ServletContext

       (4) ServletContext는 서블릿 컨테이너가 시작될 때 웹 서버에 등록된 
                      웹 애플리케이션 단위로  하나의 ServletContext 객체가  자동으로 생성됩니다. 
       (5) ServletContext를 간단하게 웹 컨텍스트 또는 컨텍스트라고도 합니다.
       (6) WAS에 등록된 웹 애플리케이션 단위로 컨텍스트가 생성되는 이유는 
                     서블릿 컨테이너가 웹 애플리케이션 단위로 모든 자원을  관리할 수 있게 하기 위해서입니다. 
                     즉, 웹 애플리케이션 내에 있는  모든 서블릿 그리고 JSP 간에  정보를 공유할 수 있고,
                     서블릿 컨테이너에 대한 정보를 추출할 수 있게 하는 기술이  바로 ServletContext입니다.

    2) 클라이언트 단위 유지
       (1)클라이언트별로 구분해서 상태정보를 유지한다는 의미입니다.
       (2)클라이언트가 계속해서 사용하고자 하는 상태 정보가 있는데 이 상태 정보를 
          다른 클라이언트는 사용할 수 없어야 할 때 클라이언트 단위로 유지해야 합니다. 
       (3)대표적인 예가 로그인 작업입니다. 
          로그인 작업은 클라이언트별로 이루어져야 합니다.
       
       - javax.servlet.http.HttpSession
       - javax.servlet.http.Cookie

       - 쿠기와 세션의 차이점
           구분                    쿠키                   세션
         저장 위치                클라이언트                 서버
         저장 데이터 크기           제한 있음               서버에서 수용할 수 있는 만큼
       
    3) 요청 단위 유지
       (1)클라이언트의 서비스 요청 단위로 유지한다는 것입니다. 
       (2)웹에서는 클라이언트로부터 요청이 있을 때마다 새로운 연결 작업이
          이루어지며, 클라이언트로 응답이 이루어지면 연결은 바로 해제됩니다. 
       (3)클라이언트로부터 요청이 들어오고 응답이 나가기까지가 하나의 요청입니다. 
       (4)이렇게 하나의 요청에서만 상태 정보를 유지하고 할 때는  HttpServletRequest객체를 통해서 할 수 있습니다.
      
       - javax.servlet.http.HttpServletRequest

3. 메서드
      저장 메서드 : setAttribute("속성",값)
      값 가져오는 메서드 : getAttribute("속성")   












